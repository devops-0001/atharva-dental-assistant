apiVersion: apps/v1
kind: Deployment
metadata:
  name: atharva-retriever
  namespace: atharva-ml
  labels: { app: retriever }
spec:
  replicas: 1
  selector:
    matchLabels: { app: retriever }
  template:
    metadata:
      labels: { app: retriever }
    spec:
      terminationGracePeriodSeconds: 20
      containers:
      - name: api
        image: public.ecr.aws/docker/library/python:3.11-slim
        imagePullPolicy: IfNotPresent
        workingDir: /mnt/project/atharva-dental-assistant
        env:
        - { name: HOME, value: /mnt/project }
        - { name: VIRTUAL_ENV, value: /opt/venv }   # venv on emptyDir
        - { name: PATH, value: /opt/venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin }
        - { name: PYTHONPATH, value: /mnt/project/atharva-dental-assistant }
        - { name: HF_HOME, value: /mnt/project/.hf_cache }
        - { name: TOKENIZERS_PARALLELISM, value: "false" }
        - { name: INDEX_PATH, value: /mnt/project/atharva-dental-assistant/artifacts/rag/index.faiss }
        - { name: META_PATH,  value: /mnt/project/atharva-dental-assistant/artifacts/rag/meta.json }
        - { name: MODEL_NAME, value: sentence-transformers/all-MiniLM-L6-v2 }
        - { name: BACKEND, value: sparse }          # using sparse now
        - { name: PIP_DISABLE_PIP_VERSION_CHECK, value: "1" }
        - { name: PIP_NO_CACHE_DIR, value: "1" }
        - { name: PIP_CACHE_DIR, value: /opt/tmp/pip }
        - { name: TMPDIR, value: /opt/tmp }
        - { name: PIP_ONLY_BINARY, value: ":all:" } # ← do NOT build from source
        ports:
        - { name: http, containerPort: 8001 }
        command: ["bash","-lc"]
        args:
          - |
            set -euo pipefail
            python -m venv "$VIRTUAL_ENV"
            . "$VIRTUAL_ENV/bin/activate"
            python -m pip install --upgrade pip
            if [ "${BACKEND:-sparse}" = "sparse" ]; then
              # Pure sparse stack (forces wheels only; will fail if a wheel is unavailable for your arch)
              python -m pip install --only-binary=:all: \
                "numpy==1.26.4" "scipy==1.10.1" "scikit-learn==1.3.2" joblib==1.4.2 \
                fastapi==0.112.2 uvicorn==0.30.6 prometheus-client>=0.20.0
            else
              python -m pip install --only-binary=:all: \
                "numpy==1.26.4" sentence-transformers==2.7.0 "faiss-cpu==1.7.4" \
                fastapi==0.112.2 uvicorn==0.30.6
            fi
            uvicorn rag.retriever:app --host 0.0.0.0 --port 8001
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
            ephemeral-storage: "2Gi"   # ↑ reserve more scratch
          limits:
            cpu: "2"
            memory: "4Gi"
            ephemeral-storage: "6Gi"   # ↑ allow larger wheels
        volumeMounts:
        - { name: host,  mountPath: /mnt/project }
        - { name: venv,  mountPath: /opt/venv }
        - { name: tmp,   mountPath: /opt/tmp }
      volumes:
      - name: host
        hostPath: { path: /mnt/project, type: Directory }
      - name: venv
        emptyDir:
          sizeLimit: 3Gi              # ↑ allow the venv to exist
      - name: tmp
        emptyDir:
          sizeLimit: 3Gi              # ↑ pip/tmp workspace
